<?php

/**
 * @file
 * Contains iq_faq.module.
 */

use Drupal\iq_faq\FaqMetatagBuilder;
use Drupal\node\NodeInterface;

/**
 * Implements hook_metatags_alter().
 *
 * Read FAQ data from rendered node content and add it to metatags.
 */
function iq_faq_metatags_alter(array &$metatags) {
  if (\Drupal::currentUser()->isAuthenticated()) {
    return;
  }
  // Only process metatags on GET requests.
  if (\Drupal::request()->getMethod() !== 'GET') {
    return;
  }

  $node = \Drupal::request()->get('node');
  if (!($node instanceof NodeInterface)) {
    return;
  }

  // Set the entity for the faq builder.
  FaqMetatagBuilder::setEntity($node);

  // Prepare default value for qa page if not yet set.
  if (empty($metatags['schema_qa_page_main_entity'])) {
    $metatags['schema_qa_page_main_entity'] = [[
      'pivot' => 1,
      '@type' => 'Question',
      'name'  => '',
      'acceptedAnswer' => [
        'pivot' => 1,
        '@type' => 'Answer',
        'text'  => '',
      ],
    ],
    ];
    $metatags['schema_qa_page_type'] = 'FAQPage';
  }
}

/**
 * Implements hook_element_info_alter().
 */
function iq_faq_element_info_alter(array &$types) {
  $types['pattern']['#post_render'][] = [
    FaqMetatagBuilder::class,
    'postRenderCollect',
  ];
  $types['view']['#post_render'][] = [
    FaqMetatagBuilder::class,
    'postRenderCollect',
  ];
  $types['html_tag']['#post_render'][] = [
    FaqMetatagBuilder::class,
    'postRenderHtmlTag',
  ];
}
